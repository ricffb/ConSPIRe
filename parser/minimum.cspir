
typevar X

datatype T = in.X | out.X

NondReg = in?x -> NondReg'(x)

NondReg'(x : X) = (in?y -> if x==y then NondReg'(x) else NondReg'(x) |~| NondReg'(y)) 
            []
              (out!x -> NondReg'(x))

-- assert that NondReg is a Lazic Process
assert {} |- NondReg : Proc(T)